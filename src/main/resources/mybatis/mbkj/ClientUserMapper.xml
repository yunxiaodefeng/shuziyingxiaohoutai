<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.mbkj.clientuser.mapper.ClientUserMapper">

    <resultMap type="ClientUser" id="ClientUserResult">
        <result property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="headurl" column="headurl"/>
        <result property="createtime" column="createtime"/>
        <result property="userid" column="userid"/>
        <result property="phone" column="phone"/>
        <result property="sex" column="sex"/>
        <result property="ucount" column="ucount"/>
        <result property="name" column="name"/>
        <result property="idcard" column="idcard"/>
        <result property="companyname" column="companyname"/>
        <result property="lastupdatetime" column="lastupdatetime"/>
        <result property="nextdatetime" column="nextdatetime"/>
        <result property="firstchar" column="firstchar"/>
        <result property="source" column="source"/>
        <result property="openid" column="openid"/>
        <result property="storeid" column="storeid"/>
        <result property="address" column="address"/>
        <result property="job" column="job"/>
        <result property="marriage" column="marriage"/>
        <result property="makers" column="makers"/>
        <result property="grade" column="grade"/>
        <result property="step" column="step"/>
        <result property="borthday" column="borthday"/>
        <result property="borthdaytype" column="borthdaytype"/>
        <result property="usertype" column="usertype"/>
    </resultMap>

    <sql id="selectClientUserVo">
        select id, nickname, headurl, createtime, userid, phone, sex, ucount, name, idcard, companyname, lastupdatetime, nextdatetime, firstchar, source, openid, storeid, address, job, marriage, makers, grade, step, borthday, borthdaytype, usertype from client_user
    </sql>


    <select id="selectUserDetail" parameterType="map" resultType="com.ruoyi.project.mbkj.clientuser.domain.UserDetail">
         SELECT DISTINCT
        cu.id, cu.nickname, cu.headurl, cu.createtime, cu.userid, cu.phone,  cu.ucount, cu.name, cu.idcard, cu.companyname,
        DATE_FORMAT( cu.lastupdatetime, '%Y-%m-%d' ) AS  lastupdatetime, cu.nextdatetime, cu.firstchar, cu.source,
        cu.storeid, cu.address, cu.job,   cu.makers, cu.grade, cu.step, cu.borthday, cu.borthdaytype, cu.usertype,
        ss.`name` AS storename,
        sysuser.username,

        grad.VALUE AS 'gradename',
        sextab.VALUE AS sex,
       marriagetab.`value` AS marriage
        FROM client_user cu
        LEFT JOIN system_dic grad ON cu.grade = grad.`key` AND grad.type = 'clienttype'
        LEFT JOIN system_dic sextab ON cu.sex = sextab.`key` AND sextab.type = 'sex'
        LEFT JOIN system_dic marriagetab ON cu.sex = marriagetab.`key` AND marriagetab.type = 'marriage'
        LEFT JOIN system_store ss ON cu.storeid = ss.id
        LEFT JOIN (SELECT id,username FROM sys_user_admin WHERE STATUS=1) sysuser ON cu.userid = sysuser.id
        WHERE cu.id=#{id}
        order by cu.firstchar,cu.name asc
    </select>

    <select id="selectClientUserListcountNum" parameterType="map" resultType="Integer">

        SELECT count(1) from (
        SELECT cu.id
        FROM client_user cu
        LEFT JOIN system_dic grad ON cu.grade = grad.`key` AND grad.type = 'clienttype'
        LEFT JOIN system_store ss ON cu.storeid = ss.id
        LEFT JOIN (SELECT id,username FROM sys_user_admin WHERE STATUS=1) sysuser ON cu.userid = sysuser.id
        <if test="_parameter.containsKey('list')">
            LEFT JOIN (
            SELECT a.clientid,GROUP_CONCAT(b.`title` ORDER BY b.`title` SEPARATOR '、') AS titles ,
            a.content AS content FROM (
            SELECT GROUP_CONCAT(a1.content ORDER BY a1.content SEPARATOR ',') AS content ,clientid
            FROM  client_userdetail  a1 WHERE content IS NOT NULL   GROUP BY a1.clientid  ORDER BY NULL
            ) a, system_libdetail b WHERE FIND_IN_SET(b.id,a.content )

            GROUP BY a.clientid  ORDER BY NULL
            ) m ON cu.`id`=m.clientid
        </if>
        <where>
            <if test="_parameter.containsKey('list')">
                <foreach item="id" collection="list"     >
                    and  FIND_IN_SET(#{id},m.content)
                </foreach>
            </if>
            <if test="userLevel != null  and userLevel != ''">and cu.grade =#{userLevel}</if>
            <if test="nickname != null  and nickname != ''">and cu.name like concat('%', #{nickname}, '%')</if>
            <if test="makers != null  and makers != ''">and cu.makers like concat('%', #{makers}, '%')</if>
            <if test="phone != null  and phone != ''">and cu.phone like concat('%', #{phone}, '%')</if>
            <if test="name != null  and name != ''">and sysuser.username like concat('%', #{name}, '%')</if>
            <if test="storeid !=null and storeid != ''">and ss.id=#{storeid}</if>
        </where>
        ) f


    </select>

    <select id="getclientUserList" parameterType="map" resultType="com.ruoyi.project.mbkj.clientuser.domain.ClientUser">

        SELECT DISTINCT cu.id,
        cu.name,cu.sex,cu.phone,sysuser.username,
        grad.VALUE AS 'gradename',m.`content`,CONCAT(m.`titles`,"   ") AS lablelist
        FROM  client_user cu
        LEFT JOIN system_dic grad ON cu.grade = grad.`key` AND grad.type = 'clienttype'
        LEFT JOIN system_store ss ON cu.storeid = ss.id
        LEFT JOIN (SELECT id,username FROM sys_user_admin WHERE STATUS=1) sysuser ON cu.userid = sysuser.id
        LEFT JOIN (

        SELECT a.clientid,GROUP_CONCAT(b.`title` ORDER BY b.`title` SEPARATOR '、') AS titles ,
        a.content AS content FROM (

        SELECT GROUP_CONCAT(a1.content ORDER BY a1.content SEPARATOR ',') AS content ,clientid
        FROM  client_userdetail  a1 WHERE content IS NOT NULL   GROUP BY a1.clientid  ORDER BY NULL

        ) a, system_libdetail b WHERE FIND_IN_SET(b.id,a.content )

        GROUP BY a.clientid  ORDER BY NULL
        ) m ON cu.`id`=m.clientid
        <where>
            <if test="_parameter.containsKey('list')">
                <foreach item="id" collection="list"   >
                    and  FIND_IN_SET(#{id},m.content)
                </foreach>
            </if>
            <if test="userLevel != null  and userLevel != ''">and cu.grade =#{userLevel}</if>
            <if test="nickname != null  and nickname != ''">and cu.name like concat('%', #{nickname}, '%')</if>
            <if test="makers != null  and makers != ''">and cu.makers like concat('%', #{makers}, '%')</if>
            <if test="phone != null  and phone != ''">and cu.phone like concat('%', #{phone}, '%')</if>
            <if test="name != null  and name != ''">and sysuser.username like concat('%', #{name}, '%')</if>
            <if test="storeid !=null and storeid != ''">and ss.id=#{storeid}</if>
        </where>
        ORDER BY ${orderByParames} ${byAsc}
        limit #{num} ,#{size}

    </select>

    <select id="selectClientUserById" parameterType="Long" resultMap="ClientUserResult">
        <include refid="selectClientUserVo"/>
        where id = #{id}
    </select>

    <insert id="insertClientUser" parameterType="ClientUser" useGeneratedKeys="true" keyProperty="id">
        insert into client_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nickname != null">nickname,</if>
            <if test="headurl != null">headurl,</if>
            <if test="createtime != null">createtime,</if>
            <if test="userid != null">userid,</if>
            <if test="phone != null">phone,</if>
            <if test="sex != null">sex,</if>
            <if test="ucount != null">ucount,</if>
            <if test="name != null">name,</if>
            <if test="idcard != null">idcard,</if>
            <if test="companyname != null">companyname,</if>
            <if test="lastupdatetime != null">lastupdatetime,</if>
            <if test="nextdatetime != null">nextdatetime,</if>
            <if test="firstchar != null">firstchar,</if>
            <if test="source != null">source,</if>
            <if test="openid != null">openid,</if>
            <if test="storeid != null">storeid,</if>
            <if test="address != null">address,</if>
            <if test="job != null">job,</if>
            <if test="marriage != null">marriage,</if>
            <if test="makers != null">makers,</if>
            <if test="grade != null">grade,</if>
            <if test="step != null">step,</if>
            <if test="borthday != null">borthday,</if>
            <if test="borthdaytype != null">borthdaytype,</if>
            <if test="usertype != null">usertype,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nickname != null">#{nickname},</if>
            <if test="headurl != null">#{headurl},</if>
            <if test="createtime != null">#{createtime},</if>
            <if test="userid != null">#{userid},</if>
            <if test="phone != null">#{phone},</if>
            <if test="sex != null">#{sex},</if>
            <if test="ucount != null">#{ucount},</if>
            <if test="name != null">#{name},</if>
            <if test="idcard != null">#{idcard},</if>
            <if test="companyname != null">#{companyname},</if>
            <if test="lastupdatetime != null">#{lastupdatetime},</if>
            <if test="nextdatetime != null">#{nextdatetime},</if>
            <if test="firstchar != null">#{firstchar},</if>
            <if test="source != null">#{source},</if>
            <if test="openid != null">#{openid},</if>
            <if test="storeid != null">#{storeid},</if>
            <if test="address != null">#{address},</if>
            <if test="job != null">#{job},</if>
            <if test="marriage != null">#{marriage},</if>
            <if test="makers != null">#{makers},</if>
            <if test="grade != null">#{grade},</if>
            <if test="step != null">#{step},</if>
            <if test="borthday != null">#{borthday},</if>
            <if test="borthdaytype != null">#{borthdaytype},</if>
            <if test="usertype != null">#{usertype},</if>
        </trim>
    </insert>

    <update id="updateClientUser" parameterType="ClientUser">
        update client_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="headurl != null">headurl = #{headurl},</if>
            <if test="createtime != null">createtime = #{createtime},</if>
            <if test="userid != null">userid = #{userid},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="ucount != null">ucount = #{ucount},</if>
            <if test="name != null">name = #{name},</if>
            <if test="idcard != null">idcard = #{idcard},</if>
            <if test="companyname != null">companyname = #{companyname},</if>
            <if test="lastupdatetime != null">lastupdatetime = #{lastupdatetime},</if>
            <if test="nextdatetime != null">nextdatetime = #{nextdatetime},</if>
            <if test="firstchar != null">firstchar = #{firstchar},</if>
            <if test="source != null">source = #{source},</if>
            <if test="openid != null">openid = #{openid},</if>
            <if test="storeid != null">storeid = #{storeid},</if>
            <if test="address != null">address = #{address},</if>
            <if test="job != null">job = #{job},</if>
            <if test="marriage != null">marriage = #{marriage},</if>
            <if test="makers != null">makers = #{makers},</if>
            <if test="grade != null">grade = #{grade},</if>
            <if test="step != null">step = #{step},</if>
            <if test="borthday != null">borthday = #{borthday},</if>
            <if test="borthdaytype != null">borthdaytype = #{borthdaytype},</if>
            <if test="usertype != null">usertype = #{usertype},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteClientUserById" parameterType="Long">
        delete from client_user where id = #{id}
    </delete>

    <delete id="deleteClientUserByIds" parameterType="String">
        delete from client_user where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>